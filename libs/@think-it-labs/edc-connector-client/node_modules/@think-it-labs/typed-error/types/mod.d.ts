/**
 * `TypedError` is a superset of the `Error` class.
 * It extends it by allowing the specialization to a custom _type_.
 *
 * **Example:**
 * ```ts
 * enum MyErrorType {
 *   Unknown = "Unknown",
 *   Http = "Http",
 * }
 *
 * export class MyError extends TypedError<MyErrorType> {}
 *
 * ```
 */
export declare class TypedError<T> extends Error {
    /** Specialization type */
    type: T;
    constructor(type: T, message?: string, options?: ErrorOptions);
    /**
     * Returns the name of the new `TypedError` class, concatenating the `type` field.
     *
     * For class `MyError` with `type` field `Unknown`, the result is: `MyError(Unknown)`
     */
    get name(): string;
}
