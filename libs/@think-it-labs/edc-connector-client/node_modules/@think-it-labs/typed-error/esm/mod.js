/**
 * `TypedError` is a superset of the `Error` class.
 * It extends it by allowing the specialization to a custom _type_.
 *
 * **Example:**
 * ```ts
 * enum MyErrorType {
 *   Unknown = "Unknown",
 *   Http = "Http",
 * }
 *
 * export class MyError extends TypedError<MyErrorType> {}
 *
 * ```
 */
export class TypedError extends Error {
    constructor(type, message, options) {
        super(message, options);
        /** Specialization type */
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.type = type;
    }
    /**
     * Returns the name of the new `TypedError` class, concatenating the `type` field.
     *
     * For class `MyError` with `type` field `Unknown`, the result is: `MyError(Unknown)`
     */
    get name() {
        return `${this.constructor.name}(${this.type})`;
    }
}
